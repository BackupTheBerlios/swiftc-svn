<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language name="Swift" version="0.1" kateversion="2.4" section="Sources" extensions="*.swift" mimetype="text/swift-src" priority="9">
  <highlighting>
    <list name="keywords">
      <item> asm </item>

      <item> repeat </item>
      <item> while </item>
      <item> do_while </item>
      <item> for </item>
      <item> for_each </item>

      <item> constraint </item>
      <item> scope </item>
      <item> end </item>

      <item> break </item>
      <item> continue </item>
      <item> goto </item>
      <item> return </item>
      <item> result </item>

      <item> if </item>
      <item> else </item>
      <item> elif </item>

      <item> switch </item>
      <item> case </item>
      <item> default </item>

      <item> throw </item>
      <item> throws </item>
      <item> try </item>
      <item> catch </item>
      <item> finally </item>

      <item> class </item>
      <item> struct </item>
      <item> enum </item>
      <item> union </item>

      <item> inits </item>
      <item> reinit </item>
      <item> assign </item>
      <item> create </item>
      <item> constructor </item>
      <item> destructor </item>
      <item> in </item>
      <item> iterator </item>

      <item> reader </item>
      <item> writer </item>
      <item> routine </item>
      <item> property </item>

      <item> new </item>
      <item> delete </item>

      <item> true </item>
      <item> false </item>

      <item> operator </item>
      <item> sizeof </item>
      <item> this </item>
      <item> counter </item>
      <item> current </item>

      <item> private </item>
      <item> protected </item>
      <item> public </item>
      <item> package </item>
      <item> import </item>

      <item> alias </item>
      <item> typedef </item>
      <item> typeid </item>
      <item> type_info </item>
      <item> typename </item>
      <item> abstract </item>
      <item> virtual </item>

      <item> ct_if </item>
      <item> ct_else </item>
      <item> version </item>

      <item> concept </item>
      <item> behaves_as </item>
      <item> extends </item>
      <item> generic </item>

      <item> and </item>
      <item> or </item>
      <item> xor </item>
      <item> not </item>

      <item> l_and </item>
      <item> l_or </item>
      <item> l_xor </item>

      <item> shr </item>
      <item> rol </item>
      <item> ror </item>

      <item> inc </item>
      <item> dec </item>

      <item> true </item>
      <item> false </item>
      <item> nil </item>

    </list>
    <list name="extensions">
      <item> K_DCOP </item>
      <item> SLOT </item>
      <item> SIGNAL </item>
      <item> Q_CLASSINFO </item>
      <item> Q_ENUMS </item>
      <item> Q_EXPORT </item>
      <item> Q_OBJECT </item>
      <item> Q_OVERRIDE </item>
      <item> Q_PROPERTY </item>
      <item> Q_SETS </item>
      <item> TRUE </item>
      <item> FALSE </item>
      <item> connect </item>
      <item> disconnect </item>
      <item> emit </item>
      <item> signals </item>
      <item> slots </item>
<!--       <item> foreach </item> -->
    </list>
    <list name="types">
      <item> auto </item>

      <item> lazy </item>

      <item> inout </item>
<!--       <item> out </item> -->

      <item> def </item>
      <item> cst </item>
      <item> var </item>

      <item> bool </item>
      <item> bit </item>

      <item> int8 </item>
      <item> int16 </item>
      <item> int32 </item>
      <item> int64 </item>
      <item> int </item>

      <item> index </item>

      <item> sat8 </item>
      <item> sat16 </item>

      <item> uint8 </item>
      <item> uint16 </item>
      <item> uint32 </item>
      <item> uint64 </item>
      <item> uint </item>

      <item> usat8 </item>
      <item> usat16 </item>

      <item> real32 </item>
      <item> real64 </item>
      <item> real </item>


      <item> char8 </item>
      <item> char16 </item>
      <item> char </item>

      <item> string8 </item>
      <item> string16 </item>
      <item> string </item>

      <item> static </item>
      <item> volatile </item>
      <item> synchronized </item>
      <item> generic </item>

      <item> simd </item>
      <item> array </item>

  </list>
    <contexts>
      <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
        <DetectSpaces />
	<RegExpr attribute="Preprocessor" context="Outscoped" String="#\s*if\s+0" beginRegion="Outscoped" firstNonSpace="true" />
        <DetectChar attribute="Preprocessor" context="Preprocessor" char="#" firstNonSpace="true" />
        <StringDetect attribute="Region Marker" context="Region Marker" String="//BEGIN" beginRegion="Region1" firstNonSpace="true" />
        <StringDetect attribute="Region Marker" context="Region Marker" String="//END" endRegion="Region1" firstNonSpace="true" />
        <keyword attribute="Keyword" context="#stay" String="keywords" />
        <keyword attribute="Extensions" context="#stay" String="extensions" />
        <keyword attribute="Data Type" context="#stay" String="types" />
        <HlCChar attribute="Char" context="#stay"/>
        <DetectChar attribute="String" context="String" char="&quot;"/>
        <DetectIdentifier />
        <Float attribute="Float" context="#stay">
          <AnyChar String="fF" attribute="Float" context="#stay"/>
        </Float>
        <HlCOct attribute="Octal" context="#stay"/>
        <HlCHex attribute="Hex" context="#stay"/>
        <Int attribute="Decimal" context="#stay">
          <StringDetect attribute="Decimal" context="#stay" String="ULL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LUL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LLU" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="UL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LU" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="LL" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="U" insensitive="TRUE"/>
          <StringDetect attribute="Decimal" context="#stay" String="L" insensitive="TRUE"/>
        </Int>
        <IncludeRules context="##Doxygen" />
        <Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
        <Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
        <DetectChar attribute="Symbol" context="#stay" char="{" beginRegion="Brace1" />
        <DetectChar attribute="Symbol" context="#stay" char="}" endRegion="Brace1" />
        <AnyChar attribute="Symbol" context="#stay" String=":!%&amp;()+,-/.*&lt;=&gt;?[]{|}~^&#59;"/>
      </context>
      <context attribute="String" lineEndContext="#pop" name="String">
        <LineContinue attribute="String" context="#stay"/>
        <HlCStringChar attribute="String Char" context="#stay"/>
        <DetectChar attribute="String" context="#pop" char="&quot;"/>
      </context>
      <context attribute="Region Marker" lineEndContext="#pop" name="Region Marker">
      </context>
      <context attribute="Comment" lineEndContext="#pop" name="Commentar 1">
        <DetectSpaces />
        <IncludeRules context="##Alerts" />
        <DetectIdentifier />
      </context>
      <context attribute="Comment" lineEndContext="#stay" name="Commentar 2">
        <DetectSpaces />
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="Comment"/>
        <IncludeRules context="##Alerts" />
        <DetectIdentifier />
      </context>
      <context attribute="Preprocessor" lineEndContext="#pop" name="Preprocessor">
        <LineContinue attribute="Preprocessor" context="#stay"/>
        <RegExpr attribute="Preprocessor" context="Define" String="define.*((?=\\))"/>
        <RegExpr attribute="Preprocessor" context="#stay" String="define.*"/>
        <RangeDetect attribute="Prep. Lib" context="#stay" char="&quot;" char1="&quot;"/>
        <RangeDetect attribute="Prep. Lib" context="#stay" char="&lt;" char1="&gt;"/>
        <IncludeRules context="##Doxygen" />
        <Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
        <Detect2Chars attribute="Comment" context="Commentar/Preprocessor" char="/" char1="*"/>
      </context>
      <context attribute="Preprocessor" lineEndContext="#pop" name="Define">
        <LineContinue attribute="Preprocessor" context="#stay"/>
      </context>
      <context attribute="Comment" lineEndContext="#stay" name="Commentar/Preprocessor">
        <DetectSpaces />
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" />
        <DetectIdentifier />
      </context>
      <context attribute="Comment" lineEndContext="#stay" name="Outscoped" >
        <DetectSpaces />
        <IncludeRules context="##Alerts" />
        <DetectIdentifier />
        <DetectChar attribute="String" context="String" char="&quot;"/>
        <IncludeRules context="##Doxygen" />
        <Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
        <Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
        <RegExpr attribute="Comment" context="Outscoped intern" String="#\s*if" beginRegion="Outscoped" firstNonSpace="true" />
        <RegExpr attribute="Preprocessor" context="#pop" String="#\s*(endif|else|elif)" endRegion="Outscoped" firstNonSpace="true" />
      </context>
      <context attribute="Comment" lineEndContext="#stay" name="Outscoped intern">
        <DetectSpaces />
        <IncludeRules context="##Alerts" />
        <DetectIdentifier />
        <DetectChar attribute="String" context="String" char="&quot;"/>
        <IncludeRules context="##Doxygen" />
        <Detect2Chars attribute="Comment" context="Commentar 1" char="/" char1="/"/>
        <Detect2Chars attribute="Comment" context="Commentar 2" char="/" char1="*" beginRegion="Comment"/>
        <RegExpr attribute="Comment" context="Outscoped intern" String="#\s*if" beginRegion="Outscoped" firstNonSpace="true"/>
        <RegExpr attribute="Comment" context="#pop" String="#\s*endif" endRegion="Outscoped" firstNonSpace="true"/>
      </context>
    </contexts>
    <itemDatas>
      <itemData name="Normal Text"  defStyleNum="dsNormal"/>
      <itemData name="Keyword"      defStyleNum="dsKeyword"/>
      <itemData name="Extensions"   defStyleNum="dsKeyword" color="#0095ff" selColor="#ffffff" bold="1" italic="0"/>
      <itemData name="Data Type"    defStyleNum="dsDataType"/>
      <itemData name="Decimal"      defStyleNum="dsDecVal"/>
      <itemData name="Octal"        defStyleNum="dsBaseN"/>
      <itemData name="Hex"          defStyleNum="dsBaseN"/>
      <itemData name="Float"        defStyleNum="dsFloat"/>
      <itemData name="Char"         defStyleNum="dsChar"/>
      <itemData name="String"       defStyleNum="dsString"/>
      <itemData name="String Char"  defStyleNum="dsChar"/>
      <itemData name="Comment"      defStyleNum="dsComment"/>
      <itemData name="Symbol"       defStyleNum="dsNormal"/>
      <itemData name="Preprocessor" defStyleNum="dsOthers"/>
      <itemData name="Prep. Lib"    defStyleNum="dsOthers"/>
      <itemData name="Region Marker" defStyleNum="dsRegionMarker" />
    </itemDatas>
  </highlighting>
  <general>
    <comments>
      <comment name="singleLine" start="//" />
      <comment name="multiLine" start="/*" end="*/" region="Comment"/>
    </comments>
    <keywords casesensitive="1" />
  </general>
</language>
