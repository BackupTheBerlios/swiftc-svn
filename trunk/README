Swift is a compiler for a programming language with the same name.  Current
backend is for x86-64 Linux systems.  However, you can compile and run swift on
other archs as well.

--------------------------------------------------------------------------------

All files are published under the GPL-3. See the LICENSE-file in this directory
for details. 

--------------------------------------------------------------------------------

REQUIREMENTS
- bison
- flex
- cmake
- gnu assembler (to assemble the output file)
- gcc
- g++

--------------------------------------------------------------------------------

INSTALLING

Currently there is no way to really install the compiler. However, this must be
done to use it:
$ cmake .
$ make

You can also build the release version:
$ cmake BUILD_RELEASE=ON

Perhaps you want to try the benchmark. Just run
$ ./mk_benchmark.sh <ITER>
<ITER> is the number of runs you want to do per benchmark. Be sure you have
enough RAM (> 3 GiB) for this. The involved arrays are quite large!!!

If you want to try the other samples:
$ ./swiftc test/fibonacci.swift && ./test/fibonacci.swift.out
$ ./swiftc test/fac.swift && ./test/fac.swift.out
$ ./swiftc test/sdl_gl.swift -- -lGL -lGLU -lSDL && ./test/sdl_gl.swift.out

In Vim you can get highlighting with the syntax file provided in contrib/swift.vim

If you want to use the memory leak finder copy or symlink utils/leakfinder to
/usr/bin or another location in your path:
$ ln -s /home/username/swiftc/utils/leakfinder /usr/bin/.

--------------------------------------------------------------------------------

STATUS

This project is a research project with a partial implementation of automatic
vectorization algorithms and special vector language constructs.  I only
guarantee that the benchmarks and the other three test programs mentioned above
work. There are still plenty of TODOs.
